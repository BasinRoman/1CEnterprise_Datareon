Блок 1. 
// Тут приходит сообщение с шины, помещаем в очередь входящих. 
сшпРаботаСДанными.ПоместитьВОчередьВходящих(Формат, xdtoПакет);

Блок 2.
// Делаем запись в регистр ОчередьВходящихСообщений
Процедура ПоместитьВОчередьВходящих(формат, xdtoПакет) Экспорт

	идентификаторСообщения = ?(ТипЗнч(xdtoПакет.Id) = Тип("Строка"), Новый УникальныйИдентификатор(xdtoПакет.Id), xdtoПакет.Id);
	УстановитьСостояниеСообщения(идентификаторСообщения, Перечисления.сшпСтатусыСообщений.Новое);
	
	набор = РегистрыСведений.сшпОчередьВходящихСообщений.СоздатьНаборЗаписей();
	набор.Отбор.ИдентификаторСообщения.Установить(идентификаторСообщения, Истина);
	набор.ДополнительныеСвойства.Вставить("СШПНеобрабатывать", Истина);
	
	текЗапись = набор.Добавить();
	текЗапись.ИдентификаторСообщения = идентификаторСообщения;
	текЗапись.ДатаРегистрации = ТекущаяДатаСеанса();
	текЗапись.ФорматСообщения = Формат;
	текЗапись.КлассСообщения = xdtoПакет.ClassId;
	текЗапись.ДатаСоздания = xdtoПакет.CreationTime;
	xmlПакет = сшпОбщегоНазначения.ЗаписатьОбъектВПоток(Формат, xdtoПакет);
	текЗапись.Хранилище = Новый ХранилищеЗначения(xmlПакет);
	
	набор.Записать(Истина);
КонецПроцедуры

Блок 3.
// Создаем массив ID по выбранным ключам записей
МассивЙд = Новый Массив;

// Фоновым заданием запускаем повторную обработку выбранных сообщений
Для Каждого КлючЗаписи из МассивКлючей Цикл
		МассивЙд.Добавить(КлючЗаписи.ИдентификаторСообщения);
КонецЦикла;
	
Если НЕ сшпОбщегоНазначения.ПроверитьЭкземплярИнформационнойБазы() тогда
		ЗаписьЖурналаРегистрации("ESB. Управление пулом обработчиков", УровеньЖурналаРегистрации.Ошибка,,, "Рассинхронизация идентификаторов информационной базы");
    Возврат;
КонецЕсли;
остатокВремениОжидания = сшпРаботаСКонстантами.ПолучитьЗначениеКонстанты("сшпДлительностьОжидания") * 1000;
	
Попытка
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |	сшпОчередьВходящихСообщений.ИдентификаторСообщения КАК ИдентификаторСообщения,
    |	сшпОчередьВходящихСообщений.ФорматСообщения КАК ФорматСообщения,
    |	сшпОчередьВходящихСообщений.КлассСообщения КАК КлассСообщения,
    |	сшпОчередьВходящихСообщений.ДатаРегистрации КАК ДатаРегистрации
    |ИЗ
    |	РегистрСведений.сшпОчередьВходящихСообщений КАК сшпОчередьВходящихСообщений
    |ГДЕ
    |	сшпОчередьВходящихСообщений.ИдентификаторСообщения В(&ИдентификаторСообщения)";

    Запрос.УстановитьПараметр("ИдентификаторСообщения", МассивЙд);
    РезультатЗапроса = Запрос.Выполнить();
    ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
    СтартОжидания = ТекущаяУниверсальнаяДатаВМиллисекундах();
    Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
        максимумПотоков = сшпРаботаСКонстантами.ПолучитьЗначениеКонстанты("сшпМаксимальноеКоличествоПотоковОбработкиВходящих");
        текКоличествоПотоков = максимумПотоков - сшпОбщегоНазначения.ПолучитьКоличествоПотоков("Наименование", "ОбработатьВходящееСообщение");
        блокировка = текКоличествоПотоков > максимумПотоков;
        Если сшпОбслуживаниеОчередей.ИдетОбработкаСистемныхСобытий() тогда // Если включена обработка системных событий приостанавливаем рабочие потоки.
            сшпОбщегоНазначения.Ожидание(10);
            Продолжить;
        КонецЕсли;
        Пока блокировка Цикл
            сшпОбщегоНазначения.Ожидание(2);
            текКоличествоПотоков = максимумПотоков - сшпОбщегоНазначения.ПолучитьКоличествоПотоков("Наименование", "ОбработатьВходящееСообщение");
            блокировка = текКоличествоПотоков > максимумПотоков;
        КонецЦикла;						
        мсвПараметры = Новый Массив;
        мсвПараметры.Добавить(ВыборкаДетальныеЗаписи.ИдентификаторСообщения);
        мсвПараметры.Добавить(ВыборкаДетальныеЗаписи.ФорматСообщения);
        мсвПараметры.Добавить(ВыборкаДетальныеЗаписи.КлассСообщения);
        мсвПараметры.Добавить(ВыборкаДетальныеЗаписи.ДатаРегистрации);
        //Запускаем отобранные сообщения в фоновую обработку
        ФоновыеЗадания.Выполнить("сшпОбслуживаниеОчередей.ОбработатьВходящееСообщение",мсвПараметры, ВыборкаДетальныеЗаписи.ИдентификаторСообщения, "ОбработатьВходящееСообщение");
    КонецЦикла;
Исключение
    ИнформацияОбОшибке = ИнформацияОбОшибке();
    ЗаписьЖурналаРегистрации("ESB. Обработка очереди входящих сообщений", УровеньЖурналаРегистрации.Ошибка,,ВыборкаДетальныеЗаписи.ИдентификаторСообщения, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке));
КонецПопытки;
